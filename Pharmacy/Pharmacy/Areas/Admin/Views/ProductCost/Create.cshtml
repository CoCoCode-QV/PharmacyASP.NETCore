@model ProductCost

@{
    ViewData["Title"] = "Thêm mới giá nhập";
    Layout = "~/Areas/Admin/Views/_Layout_Admin.cshtml";

}

<h2>Thêm mới sản phẩm nhập</h2>

<hr />
<div class="edit-admin">
    @using (Html.BeginForm("Create", "ProductCost", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                <label class="col-form-label col-sm-2">Tên sản phẩm</label>
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.ProductId, ViewBag.Products as SelectList, "-- Chọn sản phẩm --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <label class="col-form-label col-sm-2">Nhà cung cấp</label>
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.SupplierId, ViewBag.Suppliers as SelectList, "-- Chọn nhà cung cấp --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-form-label col-sm-2">Giá nhập</label>
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control price-input" } })
                    @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-form-label col-sm-2">Hạn sử dụng</label>
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.ProductExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductExpiryDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-form-label col-sm-2">Kho</label>
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.ProductInventory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductInventory, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-form-label col-sm-2">Ngày nhập hàng</label>
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.ReceivingDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReceivingDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-form-label col-sm-2">Trạng thái</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" value="Áp dụng" readonly />
                    <input type="hidden" name="CostActive" value="true" />
                    @Html.ValidationMessageFor(model => model.CostActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-10">
                    <p class="text-danger ">
                        @TempData["error"]
                    </p>
                </div>
            </div>
            <div class="form-group ">
                <div class="col-lg-2">
                    <input type="submit" value="Thêm mới" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

</div>
<div class="back-pro">
    <i class="fa fa-reply"></i>
    @Html.ActionLink("Quay lại", "Index")
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('.price-input').on('input', function () {
                var value = $(this).val();
                value = value.replace(/[^\d]/g, ''); // Loại bỏ tất cả ký tự không phải số
                value = value.replace(/\B(?=(\d{3})+(?!\d))/g, "."); // Thêm dấu chấm phân cách hàng nghìn
                $(this).val(value);
            });

            $('form').on('submit', function () {
                var input = $('#ProductPrice');
                var value = input.val().replace(/\./g, ''); // Loại bỏ dấu chấm để gửi lên server
                input.val(value);
            });
        });
    </script>
}
